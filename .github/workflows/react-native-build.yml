name: React Native Android Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  # Memungkinkan workflow dijalankan secara manual dari tab Actions
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build Type (debug/release/both)'
        required: true
        default: 'both'
        type: choice
        options:
          - debug
          - release
          - both

jobs:
  android-build:
    name: Android Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Dependencies
        run: npm install

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Cache Gradle Wrapper
        uses: actions/cache@v3
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('android/gradle/wrapper/gradle-wrapper.properties') }}

      - name: Cache Gradle Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('android/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-

      - name: Make Gradlew Executable
        run: cd android && chmod +x ./gradlew

      # Buat Keystore File untuk Release Build
      - name: Create keystore file from base64
        if: ${{ github.event.inputs.build_type == 'release' || github.event.inputs.build_type == 'both' }}
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE_BASE64 }}" | base64 -d > android/app/release.keystore

      # Setup keystore.properties for Release Build
      - name: Setup keystore properties
        if: ${{ github.event.inputs.build_type == 'release' || github.event.inputs.build_type == 'both' }}
        run: |
          echo "storeFile=release.keystore" > android/keystore.properties
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" >> android/keystore.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/keystore.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/keystore.properties

      # Build Debug APK
      - name: Build Debug APK
        if: ${{ github.event.inputs.build_type == 'debug' || github.event.inputs.build_type == 'both' || github.event.inputs.build_type == '' }}
        run: |
          cd android
          ./gradlew assembleDebug --no-daemon

      # Build Release APK
      - name: Build Release APK
        if: ${{ github.event.inputs.build_type == 'release' || github.event.inputs.build_type == 'both' }}
        run: |
          cd android
          ./gradlew assembleRelease --no-daemon

      # Upload Debug APK
      - name: Upload Debug APK
        if: ${{ github.event.inputs.build_type == 'debug' || github.event.inputs.build_type == 'both' || github.event.inputs.build_type == '' }}
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: android/app/build/outputs/apk/debug/app-debug.apk

      # Upload Release APK
      - name: Upload Release APK
        if: ${{ github.event.inputs.build_type == 'release' || github.event.inputs.build_type == 'both' }}
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: android/app/build/outputs/apk/release/app-release.apk
